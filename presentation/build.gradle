apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'realm-android'

android {
  final def android = rootProject.ext.android

  compileSdkVersion android.compileSdkVersion
  buildToolsVersion android.buildToolsVersion

  defaultConfig {
    applicationId android.applicationId
    minSdkVersion android.minSdkVersion
    targetSdkVersion android.targetSdkVersion
    versionCode android.versionCode
    versionName android.versionName

    buildConfigField 'String', 'BASE_URL_GITHUB', "\"${rootProject.ext.buildConfigMain.base_url}\""
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'),
          'proguard-rules.pro', 'proguard-rules-retrofit2.pro',
          'proguard-rules-glide.pro', 'proguard-rules-butterknife.pro'
    }
    debug {
      //testCoverageEnabled true
    }
  }
  lintOptions {
    disable 'InvalidPackage'
  }
  packagingOptions {
    exclude 'META-INF/services/javax.annotation.processing.Processor'
  }
  compileOptions {
    sourceCompatibility 1.8
    targetCompatibility 1.8
  }

  dataBinding {
    enabled = true
  }
}
//@formatter:off
dependencies {
  final def libraries = rootProject.ext.dependencies
  apt libraries.guava
  apt libraries.daggerCompiler
  apt libraries.lombok

  compile fileTree(dir: 'libs', include: ['*.jar'])
  compile libraries.adapterRxJava
  compile libraries.appCompat
  compile libraries.cardView
  compile libraries.converterGson
  compile libraries.dagger
  compile libraries.flow
  compile libraries.glide
  compile libraries.gson
  compile libraries.inject
  compile libraries.loggingInterceptor
  compile libraries.lombok
  compile libraries.okHttp
  compile libraries.retrofit
  compile libraries.rxAndroid
  compile libraries.rxJava
  compile libraries.rxViper
  compile libraries.stethoOkHttp
  compile libraries.stetho
  compile libraries.supportDesign
  compile libraries.supportV4
  compile libraries.stethoRealm
  provided libraries.jsr250Api

  final def testDependencies = rootProject.ext.testDependencies
  testCompile testDependencies.assertj
  testCompile testDependencies.jUnit
  testCompile testDependencies.mockito
}
//@formatter:on
